// Generated by CoffeeScript 1.10.0
var _, generateAppConfig, generateConfig, generateServerConfig, loaders, path, webpack;

_ = require('lodash');

path = require('path');

webpack = require('webpack');

loaders = require('./loaders.config');

module.exports = (function(_this) {
    var serverConfig;

    serverConfig = {
      entry: {
        index:'./app/components/ReactApp.jsx'
      },
      output: {
        path: path.join(__dirname, './dist'),
        filename: '[name].js',
        libraryTarget: 'commonjs2'
      },
      target: 'node',
      externals: [
        function(context, request, cb) {
          var isExternal;
          isExternal = request.match(/^[a-z][a-z\/\.\-0-9]*$/i) && !request.match(/^react-routing/) && !context.match(/[\\\/]react-routing/);
          cb(null, Boolean(isExternal));
        }
      ],
      node: {
        console: false,
        global: false,
        process: false,
        Buffer: false,
        __filename: false,
        __dirname: false
      },
      module: {
    loaders: [
            {
                test: /\.jsx$/,
                exclude: /(node_modules|bower_components)/,
                loader: 'babel',
                query: {
                    presets: ['es2015']
                }
            },
            { test: /\.css$/, loader: 'style-loader!css-loader' },
            { test: /\.js$/, loader: 'jsx-loader?harmony' },
            { test: /\.scss$/, loader: 'style!css!sass?sourceMap'},
            { test: /\.(png|jpg)$/, loader: 'url-loader?limit=8192'}
        ]
  }
      
    }
    return serverConfig;
})(this);
